package main

/*
Паника:
никто не ожидал (ссылка никуда не указывает) - тогда паника
panic("Ручной вызов")

Обычная ошибка:
*/

/*
Горутины (паралелность) функция которая работает параллельно с другими
Создает и управляет само приложение (встроенный инcтрумент внутри GO)

go - перед вызовом функции (нужно )

Каналы (ссылочный тип данных) - возомжность общения горутин между собой (для синхранизации)
Пример:
var testChanel chan int (типизированный канал для учебных целей) - только одно значение для небуферизованного канал
testChanel <- 1 (запись в канал)
val := <- testChanel (для чтения) (блокирует выполнение горутины пока не появится сообщение в канале)

chanal := make(chan int, 3) - создание буферизированного канала (когда накопится 3 сообщения все встанет если из него не читаются данные)
в него можно писать и из него можно читать (единожды - кто прочел тот и отработал если несколько горутин на одном канале)

Задание направлений канала:
var testChanel chan<- int только для отправки
var testChanel <-chan int только для получения

SELECT
*/
