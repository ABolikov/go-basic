package main

import "fmt"

/*
Слайс/срез - гарантирует порядок элементов (динамический массив) смотрит на исходный массив: - длин (len) и вместимость (cap) - в него можно добавлять и удалять элементы
для создания слайса достаточно не указывать размер массива: animal := []string{}
week := [...] int{0,1,2,3,4,5,6,7}
weekend := week[6:8] (в указанную выборку попадает 6 и 7 индекс 8 - не включается) или week[6:] (до конца)
animals:= make([]string, 5, 10) - еще один способ создания
animals:= append(animals, "lion") - добавление в слайс, при добавлении - будет скопирован предыдущий массив, увеличится его капасити и будет добавлен новый элемент
*/

func main() {
	primes := [6]int{2, 3, 5, 7, 11, 13}

	var s []int = primes[1:4]
	fmt.Println(s)

	fmt.Println("=================")

	exampleSlice()
}

/*
Основное:
Срез не хранит никаких данных, он просто описывает раздел базового массива.
Изменение элементов среза изменяет соответствующие элементы базового массива.
Другие фрагменты, использующие тот же базовый массив, увидят эти изменения.
*/

func exampleSlice() {
	names := [4]string{
		"John",
		"Paul",
		"George",
		"Ringo",
	}
	fmt.Println(names)

	a := names[0:2]
	b := names[1:3]
	fmt.Println(a, b)

	b[0] = "XXX"
	fmt.Println(a, b)
	fmt.Println(names)
}
